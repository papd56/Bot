<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.group.mapper.BotGroupListMapper">

    <resultMap type="BotGroupList" id="BotGroupListResult">
        <result property="id" column="id"/>
        <result property="groupId" column="group_id"/>
        <result property="groupName" column="group_name"/>
        <result property="userName" column="user_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="isNotManage" column="is_not_manage"/>
        <result property="groupAmount" column="group_amount"/>
        <result property="trandPendingAmount" column="trand_pending_amount"/>
        <result property="balance" column="balance"/>
        <result property="finishAmount" column="finish_amount"/>
        <result property="groupNumber" column="group_number"/>
        <result property="createTime" column="create_time"/>
        <result property="boosTgId" column="boos_tg_id"/>
    </resultMap>

    <sql id="selectBotGroupListVo">
        select id,
               group_id,
               group_name,
               user_name,
               nick_name,
               is_not_manage,
               group_amount,
               trand_pending_amount,
               balance,
               finish_amount,
               group_number,
               create_time,
               boos_tg_id
        from bot_group_list
    </sql>

    <select id="selectBotGroupListList" parameterType="BotGroupList" resultMap="BotGroupListResult">
        <include refid="selectBotGroupListVo"/>
        <where>
            <if test="groupId != null ">and group_id = #{groupId}</if>
            <if test="groupName != null  and groupName != ''">and group_name like concat('%', #{groupName}, '%')</if>
            <if test="userName != null  and userName != ''">and user_name like concat('%', #{userName}, '%')</if>
            <if test="nickName != null  and nickName != ''">and nick_name like concat('%', #{nickName}, '%')</if>
            <if test="isNotManage != null ">and is_not_manage = #{isNotManage}</if>
            <if test="groupAmount != null ">and group_amount = #{groupAmount}</if>
            <if test="trandPendingAmount != null ">and trand_pending_amount = #{trandPendingAmount}</if>
            <if test="balance != null ">and balance = #{balance}</if>
            <if test="finishAmount != null ">and finish_amount = #{finishAmount}</if>
            <if test="groupNumber != null ">and group_number = #{groupNumber}</if>
            <if test="boosTgId != null ">and boos_tg_id = #{boosTgId}</if>
        </where>
    </select>

    <select id="selectBotGroupListById" parameterType="Long" resultMap="BotGroupListResult">
        <include refid="selectBotGroupListVo"/>
        where id = #{id}
    </select>

    <select id="select" parameterType="Long" resultMap="BotGroupListResult">
        <include refid="selectBotGroupListVo"/>
        where id = #{id}
    </select>
    <select id="selectBotGroupByIdAndUserName" resultMap="BotGroupListResult">
        <include refid="selectBotGroupListVo"/>
        where group_id = #{groupId} and user_name = #{userName}
    </select>


    <insert id="insertBotGroupList" parameterType="BotGroupList" useGeneratedKeys="true" keyProperty="id">
        insert into bot_group_list
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="groupId != null">group_id,</if>
            <if test="groupName != null">group_name,</if>
            <if test="userName != null">user_name,</if>
            <if test="nickName != null">nick_name,</if>
            <if test="isNotManage != null">is_not_manage,</if>
            <if test="groupAmount != null">group_amount,</if>
            <if test="trandPendingAmount != null">trand_pending_amount,</if>
            <if test="balance != null">balance,</if>
            <if test="finishAmount != null">finish_amount,</if>
            <if test="groupNumber != null">group_number,</if>
            <if test="createTime != null">create_time,</if>
            <if test="boosTgId != null">boos_tg_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="groupId != null">#{groupId},</if>
            <if test="groupName != null">#{groupName},</if>
            <if test="userName != null">#{userName},</if>
            <if test="nickName != null">#{nickName},</if>
            <if test="isNotManage != null">#{isNotManage},</if>
            <if test="groupAmount != null">#{groupAmount},</if>
            <if test="trandPendingAmount != null">#{trandPendingAmount},</if>
            <if test="balance != null">#{balance},</if>
            <if test="finishAmount != null">#{finishAmount},</if>
            <if test="groupNumber != null">#{groupNumber},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="boosTgId != null">#{boosTgId},</if>
        </trim>
    </insert>

    <update id="updateBotGroupList" parameterType="BotGroupList">
        update bot_group_list
        <trim prefix="SET" suffixOverrides=",">
            <if test="groupId != null">group_id = #{groupId},</if>
            <if test="groupName != null">group_name = #{groupName},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="nickName != null">nick_name = #{nickName},</if>
            <if test="isNotManage != null">is_not_manage = #{isNotManage},</if>
            <if test="groupAmount != null">group_amount = #{groupAmount},</if>
            <if test="trandPendingAmount != null">trand_pending_amount = #{trandPendingAmount},</if>
            <if test="balance != null">balance = #{balance},</if>
            <if test="finishAmount != null">finish_amount = #{finishAmount},</if>
            <if test="groupNumber != null">group_number = #{groupNumber},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="boosTgId != null">boos_tg_id = #{boosTgId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBotGroupListById" parameterType="Long">
        delete
        from bot_group_list
        where id = #{id}
    </delete>

    <delete id="deleteBotGroupListByIds" parameterType="String">
        delete from bot_group_list where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
